/*
 * Main CAmkES file of the Network Filter Demo
 *
 * Copyright (C) 2021, HENSOLDT Cyber GmbH
 */

import <std_connector.camkes>;

#include "system_config.h"

#include "components/FilterSender/FilterSender.camkes"
#include "components/FilterListener/FilterListener.camkes"

#include "NetworkStack_PicoTcp/camkes/NetworkStack_PicoTcp.camkes"
NetworkStack_PicoTcp_COMPONENT_DEFINE(
    NwStack1,
    NIC_DRIVER_RINGBUFFER_SIZE,
    NetworkStack_PicoTcp_NO_ADDITIONAL_INTERFACES)

NetworkStack_PicoTcp_COMPONENT_DEFINE(
    NwStack2,
    NIC_DRIVER_RINGBUFFER_SIZE,
    NetworkStack_PicoTcp_NO_ADDITIONAL_INTERFACES)

#include "EntropySource/camkes/EntropySource.camkes"
EntropySource_COMPONENT_DEFINE(EntropySource)

#include "TimeServer/camkes/TimeServer.camkes"
TimeServer_COMPONENT_DEFINE(TimeServer)

// Include the platform specific components and macros.
#include "plat_nic.camkes"

assembly {
    composition {

        //----------------------------------------------------------------------
        // NIC Drivers
        //----------------------------------------------------------------------
        FILTER_DEMO_NIC_INSTANCES(nwDriver1, nwDriver2)

        //----------------------------------------------------------------------
        // TimeServer
        //----------------------------------------------------------------------
        component TimeServer timeServer;

        TimeServer_INSTANCE_CONNECT_CLIENTS(
            timeServer,
            nwStack1.timeServer_rpc, nwStack1.timeServer_notify,
            nwStack2.timeServer_rpc, nwStack2.timeServer_notify
        )

        //----------------------------------------------------------------------
        // NwStack #1
        //----------------------------------------------------------------------
        component NwStack1 nwStack1;

        NetworkStack_PicoTcp_INSTANCE_CONNECT(
            nwStack1,
            nwDriver1
        )

        //----------------------------------------------------------------------
        // NwStack #2
        //----------------------------------------------------------------------
        component NwStack2 nwStack2;

        NetworkStack_PicoTcp_INSTANCE_CONNECT(
            nwStack2,
            nwDriver2
        )

        //----------------------------------------------------------------------
        // Filter Listener
        //----------------------------------------------------------------------
        component FilterListener filterListener;

        NetworkStack_PicoTcp_INSTANCE_CONNECT_CLIENTS(
            nwStack1,
            filterListener, networkStack)

        // Connect the FilterListener to the FilterSender to forward the
        // received valid messages.
        connection seL4RPCCall filterListener_filterSender_rpc(
            from filterListener.filterSender_rpc,
            to   filterSender.filterSender_rpc);

        connection seL4SharedData filterListener_filterSender_port(
            from filterListener.filterSender_port,
            to filterSender.filterSender_port);

        //----------------------------------------------------------------------
        // EntropySource
        //----------------------------------------------------------------------
        component EntropySource entropySource;

        EntropySource_INSTANCE_CONNECT_CLIENT(
            entropySource,
            filterListener.entropy_rpc,
            filterListener.entropy_port)

        //----------------------------------------------------------------------
        // Filter Sender
        //----------------------------------------------------------------------
        component FilterSender filterSender;

        NetworkStack_PicoTcp_INSTANCE_CONNECT_CLIENTS(
            nwStack2,
            filterSender, networkStack)
    }
    configuration {
        TimeServer_CLIENT_ASSIGN_BADGES(
            nwStack1.timeServer_rpc,
            nwStack2.timeServer_rpc
        )
        // Platform specific configuration.
        FILTER_DEMO_NIC_CONFIG(nwDriver1, nwDriver2)

        NetworkStack_PicoTcp_CLIENT_ASSIGN_BADGES(
            filterSender, networkStack,
            filterListener, networkStack
        )

        NetworkStack_PicoTcp_INSTANCE_CONFIGURE_CLIENTS(
            nwStack1,
            2
        )

        NetworkStack_PicoTcp_INSTANCE_CONFIGURE_CLIENTS(
            nwStack2,
            1
        )
    }
}
